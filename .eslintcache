[{"C:\\Users\\Luk'sC15\\coding\\react\\gsap-playground\\gsap-playground\\src\\index.js":"1","C:\\Users\\Luk'sC15\\coding\\react\\gsap-playground\\gsap-playground\\src\\reportWebVitals.js":"2","C:\\Users\\Luk'sC15\\coding\\react\\gsap-playground\\gsap-playground\\src\\App.js":"3","C:\\Users\\Luk'sC15\\coding\\react\\gsap-playground\\gsap-playground\\src\\components\\dots\\dots-component.jsx":"4","C:\\Users\\Luk'sC15\\coding\\react\\gsap-playground\\gsap-playground\\src\\components\\imageTransition\\imageTransition-component.jsx":"5","C:\\Users\\Luk'sC15\\coding\\react\\gsap-playground\\gsap-playground\\src\\components\\slider\\slider-component.jsx":"6","C:\\Users\\Luk'sC15\\coding\\react\\gsap-playground\\gsap-playground\\src\\components\\hero\\hero-component.jsx":"7"},{"size":545,"mtime":1607193180395,"results":"8","hashOfConfig":"9"},{"size":362,"mtime":499162500000,"results":"10","hashOfConfig":"9"},{"size":1496,"mtime":1607301479808,"results":"11","hashOfConfig":"9"},{"size":1738,"mtime":1607053023270,"results":"12","hashOfConfig":"9"},{"size":1038,"mtime":1607100402466,"results":"13","hashOfConfig":"9"},{"size":7952,"mtime":1607287165823,"results":"14","hashOfConfig":"9"},{"size":4279,"mtime":1607377239382,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"115kxm6",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"18"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"18"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33"},"C:\\Users\\Luk'sC15\\coding\\react\\gsap-playground\\gsap-playground\\src\\index.js",[],["34","35"],"C:\\Users\\Luk'sC15\\coding\\react\\gsap-playground\\gsap-playground\\src\\reportWebVitals.js",[],"C:\\Users\\Luk'sC15\\coding\\react\\gsap-playground\\gsap-playground\\src\\App.js",["36","37"],"import React, {useRef, useEffect} from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport logo from './logo.svg';\nimport './App.css';\nimport 'reset-css';\n\nimport { TweenMax, Power3 } from 'gsap';\n\nimport Dots from './components/dots/dots-component';\nimport ImageTransition from './components/imageTransition/imageTransition-component';\nimport Slider from './components/slider/slider-component';\nimport Hero from './components/hero/hero-component';\n\nfunction App() {\n  let logoItem = useRef(null);\n  let textItem = useRef(null);\n\n  useEffect(() => {\n    TweenMax.to(\n      logoItem,\n      1.8,\n      {\n        opacity: 1,\n        y: -20,\n        ease: Power3.easeOut\n      }\n    );\n    TweenMax.to(\n      textItem,\n      1.8,\n      {\n        opacity: 1,\n        y: -20,\n        ease: Power3.easeOut,\n        delay: .4\n      }\n    )\n  }, [])\n\n  return (\n    <div className=\"App\">\n      \n      <header className=\"App-header\">\n        <img \n          ref={el => {logoItem = el}}\n          src={logo} \n          className=\"App-logo\" \n          alt=\"logo\" \n        />\n        <p\n          ref={el => { textItem = el}}\n        >\n          Text and Logo scrolls on re-load.\n        </p>\n      </header>\n      <div className=\"body-container\">\n        <Dots />\n        <ImageTransition />\n      </div>\n      {/* <Route exact path='/slider' component={Slider} /> */}\n      <div>\n        <Slider />\n      </div>\n      <div>\n        <Hero />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","C:\\Users\\Luk'sC15\\coding\\react\\gsap-playground\\gsap-playground\\src\\components\\dots\\dots-component.jsx",[],"C:\\Users\\Luk'sC15\\coding\\react\\gsap-playground\\gsap-playground\\src\\components\\imageTransition\\imageTransition-component.jsx",["38"],"import React, {useEffect, useRef} from 'react';\r\n\r\nimport {TimelineLite, Power2} from 'gsap';\r\nimport CSSRulePlugin from \"gsap/CSSRulePlugin\";\r\n\r\nimport mountainPicture from '../../assets/mountain.jpg';\r\nimport './imageTransition.styles.scss';\r\n\r\nfunction ImageTransition() {\r\n    let container = useRef(null);\r\n    let image = useRef(null);\r\n    let imageReveal = CSSRulePlugin.getRule('.image-container:after')\r\n\r\n    const tl = new TimelineLite();\r\n\r\n    useEffect(() => {\r\n        console.log(imageReveal);\r\n        tl.to(container, .2, {css: {visibility: \"visible\"} })\r\n        .to(imageReveal, 1.4, {width: \"0%\", ease: Power2.easeInOut})\r\n        .from(image, 1.4, {scale: 1.6, ease: Power2.easeInOut, delay: -1.6});  // going from scale: 1.6, to scale: 1\r\n    });\r\n\r\n    return (\r\n        <div ref={el => container = el} className=\"container\" >\r\n        <div className=\"image-container\">\r\n            <img ref={el => image = el} src={mountainPicture} />\r\n        </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default ImageTransition;","C:\\Users\\Luk'sC15\\coding\\react\\gsap-playground\\gsap-playground\\src\\components\\slider\\slider-component.jsx",[],"C:\\Users\\Luk'sC15\\coding\\react\\gsap-playground\\gsap-playground\\src\\components\\hero\\hero-component.jsx",["39"],"import React, {useRef, useEffect} from 'react';\r\nimport { TweenMax, TimelineLite, Power3} from 'gsap';\r\n\r\nimport './hero.styles.scss';\r\nimport hero1Picture from '../../assets/hero2.jpg';\r\nimport hero2Picture from '../../assets/hero1.jpg';\r\nimport rightArr from '../../assets/right-arrow.svg';\r\n\r\nfunction Hero() {\r\n    let hero = useRef(null);\r\n    let images = useRef(null);\r\n    let content = useRef(null);\r\n\r\n    let tl = new TimelineLite({delay: .8});\r\n\r\n    useEffect(() => {\r\n        const imageOne = images.firstElementChild;\r\n        const imageTwo = images.lastElementChild;\r\n\r\n        const headlineFirst = content.children[0].children[0];\r\n        const headlineSecond = headlineFirst.nextSibling;\r\n        const headlineThird = headlineSecond.nextSibling;\r\n        const contentP = content.children[1];\r\n        const contentButton = content.children[2];\r\n\r\n        // images animations\r\n        TweenMax.to(hero, 0, {css: {visibility: 'visible'}});  // this avoids flashing on load.\r\n        tl.from(imageOne, 1.8, {y: 1380, ease: Power3.easeOut}, 'Start')\r\n            .from(imageOne.firstElementChild, 2, {scale: 1.6, ease: Power3.easeOut}, .2)\r\n            .from(imageTwo, 1.5, {y: 800, ease: Power3.easeOut}, .5)\r\n            .from(imageTwo.firstElementChild, 1.6, {scale: 1.6, ease: Power3.easeOut}, 1);\r\n\r\n        tl.staggerFrom([headlineFirst.children, headlineSecond.children, headlineThird.children], 1, {\r\n            y: 44,\r\n            ease: Power3.easeOut,\r\n            delay: .8\r\n        }, 0.15, 'Start')\r\n        .from(contentP, 1, {y: 20, opacity: 0, ease: Power3.easeOut}, 1.4)\r\n        .from(contentButton, 1, {y: 20, opacity: 0, ease: Power3.easeOut}, 1.8);\r\n    }, [tl]);\r\n\r\n    return(\r\n        <div className=\"hero\" ref={el => hero = el}>\r\n            <div className=\"hero-container\">\r\n                <div className=\"hero-inner\">\r\n                    <div className=\"hero-content\">                      \r\n                        <div className=\"hero-content-inner\" ref={el => content = el}>\r\n                            <h1>\r\n                                <div className=\"hero-content-line\">\r\n                                    <div className=\"hero-content-line-inner\">First line</div>\r\n                                </div>\r\n                                <div className=\"hero-content-line\">\r\n                                    <div className=\"hero-content-line-inner\">This is second line</div>\r\n                                </div>\r\n                                <div className=\"hero-content-line\">\r\n                                    <div className=\"hero-content-line-inner\">third line for random text.</div>\r\n                                </div>\r\n                                </h1>\r\n                                    <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. \r\n                                    Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\r\n                                    </p>\r\n                                <div className=\"btn-row\">\r\n                                    <button className=\"explore-button\">Explore\r\n                                        <div className=\"arrow-icon\">\r\n                                            <img className=\"arrow-svg\" src={rightArr} alt=\"arrow\" />\r\n                                        </div>\r\n                                    </button>\r\n                                </div>\r\n                            </div>                       \r\n                        </div>\r\n                    <div className=\"hero-images\">\r\n                        <div className=\"hero-images-inner\" ref={el => images = el}>\r\n                            <div className=\"hero-image one\">\r\n                                <img src={hero1Picture} alt=\"one\" />\r\n                            </div>\r\n                            <div className=\"hero-image two\">\r\n                                <img className=\"image-two\" src={hero2Picture} alt=\"two\" />\r\n                            </div>\r\n                        </div>\r\n                    </div>   \r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Hero;",{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","severity":1,"message":"45","line":2,"column":10,"nodeType":"46","messageId":"47","endLine":2,"endColumn":16},{"ruleId":"44","severity":1,"message":"48","line":2,"column":18,"nodeType":"46","messageId":"47","endLine":2,"endColumn":23},{"ruleId":"49","severity":1,"message":"50","line":26,"column":13,"nodeType":"51","endLine":26,"endColumn":65},{"ruleId":"52","severity":1,"message":"53","line":14,"column":9,"nodeType":"54","endLine":14,"endColumn":43},"no-native-reassign",["55"],"no-negated-in-lhs",["56"],"no-unused-vars","'Switch' is defined but never used.","Identifier","unusedVar","'Route' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react-hooks/exhaustive-deps","The 'tl' object construction makes the dependencies of useEffect Hook (at line 40) change on every render. Move it inside the useEffect callback. Alternatively, wrap the initialization of 'tl' in its own useMemo() Hook.","VariableDeclarator","no-global-assign","no-unsafe-negation"]