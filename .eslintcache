[{"C:\\Users\\Luk'sC15\\coding\\react\\gsap-playground\\gsap-playground\\src\\index.js":"1","C:\\Users\\Luk'sC15\\coding\\react\\gsap-playground\\gsap-playground\\src\\reportWebVitals.js":"2","C:\\Users\\Luk'sC15\\coding\\react\\gsap-playground\\gsap-playground\\src\\App.js":"3","C:\\Users\\Luk'sC15\\coding\\react\\gsap-playground\\gsap-playground\\src\\components\\dots\\dots-component.jsx":"4","C:\\Users\\Luk'sC15\\coding\\react\\gsap-playground\\gsap-playground\\src\\components\\imageTransition\\imageTransition-component.jsx":"5"},{"size":500,"mtime":499162500000,"results":"6","hashOfConfig":"7"},{"size":362,"mtime":499162500000,"results":"8","hashOfConfig":"7"},{"size":1153,"mtime":1607099651420,"results":"9","hashOfConfig":"7"},{"size":1738,"mtime":1607053023270,"results":"10","hashOfConfig":"7"},{"size":1025,"mtime":1607098749385,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"115kxm6",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"14"},"C:\\Users\\Luk'sC15\\coding\\react\\gsap-playground\\gsap-playground\\src\\index.js",[],["24","25"],"C:\\Users\\Luk'sC15\\coding\\react\\gsap-playground\\gsap-playground\\src\\reportWebVitals.js",[],"C:\\Users\\Luk'sC15\\coding\\react\\gsap-playground\\gsap-playground\\src\\App.js",[],"C:\\Users\\Luk'sC15\\coding\\react\\gsap-playground\\gsap-playground\\src\\components\\dots\\dots-component.jsx",[],"C:\\Users\\Luk'sC15\\coding\\react\\gsap-playground\\gsap-playground\\src\\components\\imageTransition\\imageTransition-component.jsx",["26"],"import React, {useEffect, useRef} from 'react';\r\n\r\nimport {TimelineLite, Power2} from 'gsap';\r\nimport CSSRulePlugin from \"gsap/CSSRulePlugin\";\r\n\r\nimport mountainPicture from '../../assets/mountain.jpg';\r\nimport './imageTransition.styles.scss';\r\n\r\nfunction ImageTransition() {\r\n    let container = useRef(null);\r\n    let image = useRef(null);\r\n    let imageReveal = CSSRulePlugin.getRule('.image-container:after')\r\n\r\n    const tl = new TimelineLite();\r\n\r\n    useEffect(() => {\r\n        console.log(imageReveal);\r\n        tl.to(container, .2, {css: {visibility: \"visible\"} })\r\n        .to(imageReveal, 1.4, {width: \"0%\", ease: Power2.easeInOut})\r\n        .from(image, 1.4, {scale: 1.6, ease: Power2.easeInOut});  // going from scale: 1.6, to scale: 1\r\n    });\r\n\r\n    return (\r\n        <div ref={el => container = el} className=\"container\" >\r\n        <div className=\"image-container\">\r\n            <img ref={el => image = el} src={mountainPicture} />\r\n        </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default ImageTransition;",{"ruleId":"27","replacedBy":"28"},{"ruleId":"29","replacedBy":"30"},{"ruleId":"31","severity":1,"message":"32","line":26,"column":13,"nodeType":"33","endLine":26,"endColumn":65},"no-native-reassign",["34"],"no-negated-in-lhs",["35"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]